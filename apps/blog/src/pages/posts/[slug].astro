---
import { sanityClient } from "sanity:client";
import Layout from "../../layouts/Layout.astro";
import PortableText from "../../components/PortableText.astro";
import SanityImage from "../../components/SanityImage.astro";
import Outline from "../../components/Outline.astro"
import { formatDate } from "../../utils";

// n.b. for future static or hybrid use, with published-only
// page query filtering, which can also be dynamic to keep
// presentation editing available with one source.
// export const prerender = false;
// export async function getStaticPaths() {
//   const posts = await sanityClient.fetch(
//     `*[_type == "post"][] {
//     ...
//   }`)
//   return posts.map((post) => ({
//     params: { slug: post.slug.current },
//   }));
// }

const { slug } = Astro.params
const visualEditingEnabled = import.meta.env.PUBLIC_SANITY_VISUAL_EDITING
const token = import.meta.env.PUBLIC_SANITY_VIEWER_TOKEN;
const perspective = visualEditingEnabled ? "previewDrafts" : "published";
console.log('visualEditingEnabled: ', visualEditingEnabled ? 'yes' : 'no');
console.log('perspective: ', perspective)
console.log('token: ', token)
const post = await sanityClient.fetch(
  `*[_type == "post" && slug.current == $slug][0]  {
    ...,
  }`, {
    slug: Astro.params.slug,
  },
  {
    // filterResponse: false,
    perspective,
    resultSourceMap: visualEditingEnabled ? "withKeyArraySelector" : false,
    stega: visualEditingEnabled,
    ...(visualEditingEnabled ? { token } : {}),
  }
)
// console.log('post: ', post)
console.log('title: ', post.title)
---
<Layout title={post.title} live>

  <section class="post">
    {
      post.mainImage ? (
          <Outline id={post._id} type={post._type} path="mainImage" >
            <SanityImage node={post.mainImage} width="1000"
                   shape="post__cover" alt="Cover Image" pt={false} />
          </Outline>
      ) : (
        <div class="post__cover--none" />
      )
    }

    <div class="post__container">
      <h1 class="post__title">{post.title}</h1>
      <p class="post__excerpt">{post.excerpt}</p>
      <p class="post__date">
        {formatDate(post._createdAt)}
      </p>
      <div class="post__content">
        <PortableText value={post.body}  />
      </div>
    </div>
  </section>
</Layout>

<style is:inline>
  .post {
    width: 100%;
    margin: var(--space-1) 0 var(--space-4);

    & .post__cover,
    & .post__cover--none {
      width: 100%;
      height: 200px;
      object-fit: cover;
    }

    & .post__cover--none {
      background: var(--black);
    }

    & .post__container {
      padding: 0 var(--space-3);
    }

    & .post__content {
      font-family: var(--font-family-serif);
      font-weight: 400;
      font-size: var(--font-size-4);
      line-height: var(--line-height-5);
      /*letter-spacing: -0.02em;  this breaks on Firefox */
      margin-top: var(--space-6);

      /* *todo* with the ampersand nesting,, does not work */
      /* & */blockquote {
        border-left: 5px solid  var(--black);
        padding-left: var(--space-3);
        margin-left: var(--space-4);
      }

      & a {
        color: var(--blue-600);
        text-decoration: none;
      }
    }

    & .post__title {
      font-family: var(--font-family-sans);
      font-size: var(--font-size-7);
      line-height: var(--line-height-6);
      margin: var(--space-4) 0;
      font-weight: 800;
    }

    & .post__excerpt {
      font-family: var(--font-family-serif);
      font-size: var(--font-size-5);
      line-height: var(--line-height-4);
      margin-top: 0;
      font-weight: 400;
    }

    & .post__date {
      font-family: var(--font-family-sans);
      font-weight: 600;
      font-family: var(--font-family-sans);
      font-size: var(--font-size-1);
      line-height: var(--line-height-1);
      margin-top: var(--space-4);
    }

    & .pt__embed_image {
      display: block; /* crucial for auto margins in media queries below */
      width: 400px;
      float: right;
      margin: 10px;
    }
  }

  @media (min-width: 800px) {
    .post {
      & .post__cover,
      & .post__cover--none {
        width: 750px;
        height: 380px;
      }

      & .post__title {
        font-size: var(--font-size-10);
        line-height: var(--line-height-10);
        margin: var(--space-6) 0 0;
        letter-spacing: -0.025em;
      }

      & .post__excerpt {
        font-size: var(--font-size-5);
        line-height: var(--line-height-5);
        margin-top: var(--space-3);
        margin-bottom: var(--space-3);
      }

      & .post__date {
        font-size: var(--font-size-3);
        line-height: var(--line-height-2);
        margin-top: var(--space-0);
      }

      & .post__content {
        margin-top: var(--space-7);
      }

    }
  }

  @media (max-width: 640px) {
    .post {
      & .pt__embed_image {
        float: none;
        width: 400px;
        margin: 5% auto;
      }
    }
  }

  @media (max-width: 480px) {
    .post {
      & .pt__embed_image {
        width: 90%;
        margin: 5%;
        float: none;
      }
    }
  }
</style>
